plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'codechicken'
archivesBaseName = 'DiffPatch'
version '1.2.5'

def signProps = [:]
if (System.getenv("KEY_STORE")) {
    println "Using Env variables for jar signing."
    signProps['keyStore'] = System.getenv("KEY_STORE")
    file(System.getenv("KEY_STORE_PROPS")).withReader {
        def props = new Properties()
        props.load(it)
        signProps.putAll(props)
    }
} else if (project.hasProperty('keyStore')) {
    println "Using Project properties for jar signing."
    signProps['keyStore'] = project.getProperty('keyStore')
    signProps['storePass'] = project.getProperty('keyStorePass')
    signProps['alias'] = project.getProperty('keyStoreAlias')
    signProps['keyPass'] = project.getProperty('keyStoreKeyPass')
} else {
    println 'No signing secrets found, build will not be signed.'
}

version = "$version." + (System.getenv("BUILD_NUMBER") ?: "1")
println "Starting build of ${archivesBaseName}, Version: ${version}"

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    create('gradle')
    main
}

configurations {
    shadow
    implementation.extendsFrom shadow
    gradleImplementation.extendsFrom implementation
}

dependencies {
    gradleImplementation sourceSets.main.output
    gradleCompileOnly gradleApi()

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

java {
    targetCompatibility = JavaVersion.VERSION_1_8
    sourceCompatibility = JavaVersion.VERSION_1_8
}

test {
    useJUnitPlatform()
}

def commonManifest = {
    attributes 'Main-Class': 'codechicken.diffpatch.DiffPatch'
}

jar {
    manifest commonManifest
    from file("LICENSE.txt")
    from sourceSets.gradle.output
}

shadowJar {
    minimize()
    manifest commonManifest
    configurations = [project.configurations.shadow]

    //Include license, exclude java9 and maven things.
    from file("LICENSE.txt")
    from sourceSets.gradle.output
    exclude 'META-INF/maven/**'
    exclude 'module-info.class'

    //Relocate all our dependencies into a repack package.
    relocate 'org.apache', 'codechicken.repack.org.apache'
}

tasks.register('srcJar', Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
    from file("LICENSE.txt")
}

publishing {
    repositories {
        if (System.getenv('MAVEN_PASS')) {
            maven {
                url "https://nexus.covers1624.net/repository/maven-releases/"
                credentials {
                    username 'covers1624'
                    password System.getenv('MAVEN_PASS')
                }
            }
        }
    }
    publications {
        DiffPatch(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components['java']
            artifact shadowJar
            artifact srcJar

            pom {
                name = archivesBaseName
                description = archivesBaseName
                //The publish plugin doesnt like GString's here apparently..
                url = "https://github.com/TheCBProject/${archivesBaseName}".toString()
                scm {
                    url = "https://github.com/TheCBProject/${archivesBaseName}".toString()
                    connection = "scm:git:git://github.com/TheCBProject/${archivesBaseName}.git".toString()
                    connection = "scm:git:git@github.com:TheCBProject/${archivesBaseName}.git".toString()
                }

                issueManagement {
                    system = 'github'
                    url = "https://github.com/TheCBProject/${archivesBaseName}/issues".toString()
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://raw.githubusercontent.com/TheCBProject/DiffPatch/master/LICENSE.txt"
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'covers1624'
                        name = 'covers1624'
                    }
                }
                developers {
                    developer {
                        id = 'ChickenBones'
                        name = 'Chicken Bones'
                    }
                }
            }
        }
    }
}
